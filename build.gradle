buildscript {
    repositories {
        maven {
            name = 'Minecraft Forge Maven'
            url = 'https://maven.minecraftforge.net'
        }
        maven {
            name = 'Parchment'
            url = 'https://maven.parchmentmc.org'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: project.forgegradle_version, changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = project.mod_version
group = "${project.mod_group}.${project.mod_id}"
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: project.mapping_channel, version: project.mapping_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            mods.create("${project.mod_id}").source(sourceSets.main)
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            mods.create("${project.mod_id}").source(sourceSets.main)
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            //Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', "${project.mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods.create("${project.mod_id}").source(sourceSets.main)
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}

jar {
    manifest {
        attributes(
                "Specification-Title"      : project.mod_id,
                "Specification-Vendor"     : project.mod_vendor,
                "Specification-Version"    : "1", // We are version 1 of ourselves
                "Implementation-Title"     : project.mod_name,
                "Implementation-Version"   : project.jar.archiveVersion,
                "Implementation-Vendor"    : project.mod_vendor,
                "Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-On-Java'            : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'       : project.minecraft_version,
                'Built-On-Forge-Version'   : "${project.forge_version}",
                'Built-On-Mappings-Version': "${project.mapping_channel}-${project.minecraft_version}",
        )
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
